{"ast":null,"code":"module.exports = function (hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [{\n      begin: LISP_SIMPLE_NUMBER_RE,\n      relevance: 0\n    }, {\n      begin: '#(b|B)[0-1]+(/[0-1]+)?'\n    }, {\n      begin: '#(o|O)[0-7]+(/[0-7]+)?'\n    }, {\n      begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'\n    }, {\n      begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n      end: '\\\\)'\n    }]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  });\n  var COMMENT = hljs.COMMENT(';', '$', {\n    relevance: 0\n  });\n  var VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [{\n      begin: '[\\'`]\\\\(',\n      end: '\\\\)'\n    }, {\n      begin: '\\\\(quote ',\n      end: '\\\\)',\n      keywords: {\n        name: 'quote'\n      }\n    }, {\n      begin: '\\'' + MEC_RE\n    }]\n  };\n  var QUOTED_ATOM = {\n    variants: [{\n      begin: '\\'' + LISP_IDENT_RE\n    }, {\n      begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'\n    }]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [{\n    className: 'name',\n    variants: [{\n      begin: LISP_IDENT_RE\n    }, {\n      begin: MEC_RE\n    }]\n  }, BODY];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n  return {\n    illegal: /\\S/,\n    contains: [NUMBER, SHEBANG, LITERAL, STRING, COMMENT, QUOTED, QUOTED_ATOM, LIST, IDENT]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/lisp.js"],"names":["module","exports","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","SHEBANG","className","begin","end","LITERAL","NUMBER","variants","relevance","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED_LIST","contains","QUOTED","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,aAAa,GAAG,+EAApB;AACA,MAAIC,MAAM,GAAG,aAAb;AACA,MAAIC,qBAAqB,GAAG,wEAA5B;AACA,MAAIC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE,MADC;AAEZC,IAAAA,KAAK,EAAE,KAFK;AAEEC,IAAAA,GAAG,EAAE;AAFP,GAAd;AAIA,MAAIC,OAAO,GAAG;AACZH,IAAAA,SAAS,EAAE,SADC;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAAd;AAIA,MAAIG,MAAM,GAAG;AACXJ,IAAAA,SAAS,EAAE,QADA;AAEXK,IAAAA,QAAQ,EAAE,CACR;AAACJ,MAAAA,KAAK,EAAEH,qBAAR;AAA+BQ,MAAAA,SAAS,EAAE;AAA1C,KADQ,EAER;AAACL,MAAAA,KAAK,EAAE;AAAR,KAFQ,EAGR;AAACA,MAAAA,KAAK,EAAE;AAAR,KAHQ,EAIR;AAACA,MAAAA,KAAK,EAAE;AAAR,KAJQ,EAKR;AAACA,MAAAA,KAAK,EAAE,cAAcH,qBAAd,GAAsC,IAAtC,GAA6CA,qBAArD;AAA4EI,MAAAA,GAAG,EAAE;AAAjF,KALQ;AAFC,GAAb;AAUA,MAAIK,MAAM,GAAGZ,IAAI,CAACa,OAAL,CAAab,IAAI,CAACc,iBAAlB,EAAqC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAArC,CAAb;AACA,MAAIC,OAAO,GAAGhB,IAAI,CAACgB,OAAL,CACZ,GADY,EACP,GADO,EAEZ;AACEL,IAAAA,SAAS,EAAE;AADb,GAFY,CAAd;AAMA,MAAIM,QAAQ,GAAG;AACbX,IAAAA,KAAK,EAAE,KADM;AACCC,IAAAA,GAAG,EAAE;AADN,GAAf;AAGA,MAAIW,OAAO,GAAG;AACZb,IAAAA,SAAS,EAAE,QADC;AAEZC,IAAAA,KAAK,EAAE,SAASL;AAFJ,GAAd;AAIA,MAAIkB,KAAK,GAAG;AACVb,IAAAA,KAAK,EAAEL,aADG;AAEVU,IAAAA,SAAS,EAAE;AAFD,GAAZ;AAIA,MAAIS,GAAG,GAAG;AACRd,IAAAA,KAAK,EAAEJ;AADC,GAAV;AAGA,MAAImB,WAAW,GAAG;AAChBf,IAAAA,KAAK,EAAE,KADS;AACFC,IAAAA,GAAG,EAAE,KADH;AAEhBe,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAASd,OAAT,EAAkBI,MAAlB,EAA0BH,MAA1B,EAAkCU,KAAlC;AAFM,GAAlB;AAIA,MAAII,MAAM,GAAG;AACXD,IAAAA,QAAQ,EAAE,CAACb,MAAD,EAASG,MAAT,EAAiBK,QAAjB,EAA2BC,OAA3B,EAAoCG,WAApC,EAAiDF,KAAjD,CADC;AAEXT,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,KAAK,EAAE,UADT;AACqBC,MAAAA,GAAG,EAAE;AAD1B,KADQ,EAIR;AACED,MAAAA,KAAK,EAAE,WADT;AACsBC,MAAAA,GAAG,EAAE,KAD3B;AAEEiB,MAAAA,QAAQ,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP;AAFZ,KAJQ,EAQR;AACEnB,MAAAA,KAAK,EAAE,OAAOJ;AADhB,KARQ;AAFC,GAAb;AAeA,MAAIwB,WAAW,GAAG;AAChBhB,IAAAA,QAAQ,EAAE,CACR;AAACJ,MAAAA,KAAK,EAAE,OAAOL;AAAf,KADQ,EAER;AAACK,MAAAA,KAAK,EAAE,QAAQL,aAAR,GAAwB,KAAxB,GAAgCA,aAAhC,GAAgD;AAAxD,KAFQ;AADM,GAAlB;AAMA,MAAI0B,IAAI,GAAG;AACTrB,IAAAA,KAAK,EAAE,SADE;AACSC,IAAAA,GAAG,EAAE;AADd,GAAX;AAGA,MAAIqB,IAAI,GAAG;AACTC,IAAAA,cAAc,EAAE,IADP;AAETlB,IAAAA,SAAS,EAAE;AAFF,GAAX;AAIAgB,EAAAA,IAAI,CAACL,QAAL,GAAgB,CACd;AACEjB,IAAAA,SAAS,EAAE,MADb;AAEEK,IAAAA,QAAQ,EAAE,CACR;AAACJ,MAAAA,KAAK,EAAEL;AAAR,KADQ,EAER;AAACK,MAAAA,KAAK,EAAEJ;AAAR,KAFQ;AAFZ,GADc,EAQd0B,IARc,CAAhB;AAUAA,EAAAA,IAAI,CAACN,QAAL,GAAgB,CAACC,MAAD,EAASG,WAAT,EAAsBC,IAAtB,EAA4BnB,OAA5B,EAAqCC,MAArC,EAA6CG,MAA7C,EAAqDI,OAArD,EAA8DC,QAA9D,EAAwEC,OAAxE,EAAiFE,GAAjF,EAAsFD,KAAtF,CAAhB;AAEA,SAAO;AACLJ,IAAAA,OAAO,EAAE,IADJ;AAELO,IAAAA,QAAQ,EAAE,CACRb,MADQ,EAERL,OAFQ,EAGRI,OAHQ,EAIRI,MAJQ,EAKRI,OALQ,EAMRO,MANQ,EAORG,WAPQ,EAQRC,IARQ,EASRR,KATQ;AAFL,GAAP;AAcD,CArGD","sourcesContent":["module.exports = function(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: {name: 'quote'}\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {begin: LISP_IDENT_RE},\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      SHEBANG,\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}