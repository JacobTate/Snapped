{"ast":null,"code":"module.exports = function (hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword: 'addr and as asm bind block break case cast const continue converter ' + 'discard distinct div do elif else end enum except export finally ' + 'for from generic if import in include interface is isnot iterator ' + 'let macro method mixin mod nil not notin object of or out proc ptr ' + 'raise ref return shl shr static template try tuple type using var ' + 'when while with without xor yield',\n      literal: 'shared guarded stdin stdout stderr result true false',\n      built_in: 'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' + 'float32 float64 bool char string cstring pointer expr stmt void ' + 'auto any range array openarray varargs seq set clong culong cchar ' + 'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' + 'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [{\n      className: 'meta',\n      // Actually pragma\n      begin: /{\\./,\n      end: /\\.}/,\n      relevance: 10\n    }, {\n      className: 'string',\n      begin: /[a-zA-Z]\\w*\"/,\n      end: /\"/,\n      contains: [{\n        begin: /\"\"/\n      }]\n    }, {\n      className: 'string',\n      begin: /([a-zA-Z]\\w*)?\"\"\"/,\n      end: /\"\"\"/\n    }, hljs.QUOTE_STRING_MODE, {\n      className: 'type',\n      begin: /\\b[A-Z]\\w+\\b/,\n      relevance: 0\n    }, {\n      className: 'number',\n      relevance: 0,\n      variants: [{\n        begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/\n      }, {\n        begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/\n      }]\n    }, hljs.HASH_COMMENT_MODE]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/nimrod.js"],"names":["module","exports","hljs","aliases","keywords","keyword","literal","built_in","contains","className","begin","end","relevance","QUOTE_STRING_MODE","variants","HASH_COMMENT_MODE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,SAAO;AACLC,IAAAA,OAAO,EAAE,CAAC,KAAD,CADJ;AAELC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EACL,yEACA,mEADA,GAEA,oEAFA,GAGA,qEAHA,GAIA,oEAJA,GAKA,mCAPM;AAQRC,MAAAA,OAAO,EACL,sDATM;AAURC,MAAAA,QAAQ,EACN,sEACA,kEADA,GAEA,oEAFA,GAGA,gEAHA,GAIA;AAfM,KAFL;AAmBLC,IAAAA,QAAQ,EAAE,CAAE;AACRC,MAAAA,SAAS,EAAE,MADH;AACW;AACnBC,MAAAA,KAAK,EAAE,KAFC;AAGRC,MAAAA,GAAG,EAAE,KAHG;AAIRC,MAAAA,SAAS,EAAE;AAJH,KAAF,EAKL;AACDH,MAAAA,SAAS,EAAE,QADV;AAEDC,MAAAA,KAAK,EAAE,cAFN;AAGDC,MAAAA,GAAG,EAAE,GAHJ;AAIDH,MAAAA,QAAQ,EAAE,CAAC;AAACE,QAAAA,KAAK,EAAE;AAAR,OAAD;AAJT,KALK,EAUL;AACDD,MAAAA,SAAS,EAAE,QADV;AAEDC,MAAAA,KAAK,EAAE,mBAFN;AAGDC,MAAAA,GAAG,EAAE;AAHJ,KAVK,EAeRT,IAAI,CAACW,iBAfG,EAgBR;AACEJ,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,cAFT;AAGEE,MAAAA,SAAS,EAAE;AAHb,KAhBQ,EAoBL;AACDH,MAAAA,SAAS,EAAE,QADV;AAEDG,MAAAA,SAAS,EAAE,CAFV;AAGDE,MAAAA,QAAQ,EAAE,CACR;AAACJ,QAAAA,KAAK,EAAE;AAAR,OADQ,EAER;AAACA,QAAAA,KAAK,EAAE;AAAR,OAFQ,EAGR;AAACA,QAAAA,KAAK,EAAE;AAAR,OAHQ,EAIR;AAACA,QAAAA,KAAK,EAAE;AAAR,OAJQ;AAHT,KApBK,EA8BRR,IAAI,CAACa,iBA9BG;AAnBL,GAAP;AAoDD,CArDD","sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword:\n        'addr and as asm bind block break case cast const continue converter ' +\n        'discard distinct div do elif else end enum except export finally ' +\n        'for from generic if import in include interface is isnot iterator ' +\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\n        'raise ref return shl shr static template try tuple type using var ' +\n        'when while with without xor yield',\n      literal:\n        'shared guarded stdin stdout stderr result true false',\n      built_in:\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\n        'auto any range array openarray varargs seq set clong culong cchar ' +\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\n        'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [ {\n        className: 'meta', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n};"]},"metadata":{},"sourceType":"script"}