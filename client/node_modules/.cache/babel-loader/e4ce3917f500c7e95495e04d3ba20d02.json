{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\coding\\\\Projects\\\\Snapped\\\\client\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({\n  component: Component,\n  path,\n  ...rest\n}) => {\n  const {\n    loading,\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {\n          targetUrl: path\n        }\n      });\n    };\n\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props => isAuthenticated === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 32\n    }\n  })) : null;\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({\n    path: path,\n    render: render\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n  path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired\n};\nexport default withRouter(PrivateRoute);","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/src/components/PrivateRoute.js"],"names":["React","useEffect","PropTypes","Route","withRouter","useAuth0","PrivateRoute","component","Component","path","rest","loading","isAuthenticated","loginWithRedirect","fn","appState","targetUrl","render","props","propTypes","oneOfType","element","func","isRequired","string","arrayOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAChE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAkDR,QAAQ,EAAhE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,IAAIC,eAAf,EAAgC;AAC9B;AACD;;AACD,UAAME,EAAE,GAAG,YAAY;AACrB,YAAMD,iBAAiB,CAAC;AACtBE,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,SAAS,EAAEP;AAAb;AADY,OAAD,CAAvB;AAGD,KAJD;;AAKAK,IAAAA,EAAE;AACH,GAVQ,EAUN,CAACH,OAAD,EAAUC,eAAV,EAA2BC,iBAA3B,EAA8CJ,IAA9C,CAVM,CAAT;;AAYA,QAAMQ,MAAM,GAAGC,KAAK,IAClBN,eAAe,KAAK,IAApB,gBAA2B,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B,GAAsD,IADxD;;AAGA,sBAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,MAAM,EAAEQ;AAA3B,KAAuCP,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAnBD;;AAqBAJ,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,SAAS,EAAEL,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,OAAX,EAAoBnB,SAAS,CAACoB,IAA9B,CAApB,EACRC,UAFoB;AAGvBd,EAAAA,IAAI,EAAEP,SAAS,CAACkB,SAAV,CAAoB,CACxBlB,SAAS,CAACsB,MADc,EAExBtB,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACsB,MAA5B,CAFwB,CAApB,EAGHD;AANoB,CAAzB;AASA,eAAenB,UAAU,CAACE,YAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated) {\r\n      return;\r\n    }\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: { targetUrl: path }\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\r\n    .isRequired,\r\n  path: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string)\r\n  ]).isRequired\r\n};\r\n\r\nexport default withRouter(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}