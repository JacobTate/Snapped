{"ast":null,"code":"module.exports = function (hljs) {\n  var LITERALS = {\n    literal: 'true false null'\n  };\n  var ALLOWED_COMMENTS = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE];\n  var TYPES = [hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE];\n  var VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{',\n    end: '}',\n    contains: [{\n      className: 'attr',\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE],\n      illegal: '\\\\n'\n    }, hljs.inherit(VALUE_CONTAINER, {\n      begin: /:/\n    })].concat(ALLOWED_COMMENTS),\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)],\n    // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.push(OBJECT, ARRAY);\n  ALLOWED_COMMENTS.forEach(function (rule) {\n    TYPES.push(rule);\n  });\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/json.js"],"names":["module","exports","hljs","LITERALS","literal","ALLOWED_COMMENTS","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","TYPES","QUOTE_STRING_MODE","C_NUMBER_MODE","VALUE_CONTAINER","end","endsWithParent","excludeEnd","contains","keywords","OBJECT","begin","className","BACKSLASH_ESCAPE","illegal","inherit","concat","ARRAY","push","forEach","rule"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,QAAQ,GAAG;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAf;AACA,MAAIC,gBAAgB,GAAG,CACrBH,IAAI,CAACI,mBADgB,EAErBJ,IAAI,CAACK,oBAFgB,CAAvB;AAIA,MAAIC,KAAK,GAAG,CACVN,IAAI,CAACO,iBADK,EAEVP,IAAI,CAACQ,aAFK,CAAZ;AAIA,MAAIC,eAAe,GAAG;AACpBC,IAAAA,GAAG,EAAE,GADe;AACVC,IAAAA,cAAc,EAAE,IADN;AACYC,IAAAA,UAAU,EAAE,IADxB;AAEpBC,IAAAA,QAAQ,EAAEP,KAFU;AAGpBQ,IAAAA,QAAQ,EAAEb;AAHU,GAAtB;AAKA,MAAIc,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE,GADI;AACCN,IAAAA,GAAG,EAAE,GADN;AAEXG,IAAAA,QAAQ,EAAE,CACR;AACEI,MAAAA,SAAS,EAAE,MADb;AAEED,MAAAA,KAAK,EAAE,GAFT;AAEcN,MAAAA,GAAG,EAAE,GAFnB;AAGEG,MAAAA,QAAQ,EAAE,CAACb,IAAI,CAACkB,gBAAN,CAHZ;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAORnB,IAAI,CAACoB,OAAL,CAAaX,eAAb,EAA8B;AAACO,MAAAA,KAAK,EAAE;AAAR,KAA9B,CAPQ,EAQRK,MARQ,CAQDlB,gBARC,CAFC;AAWXgB,IAAAA,OAAO,EAAE;AAXE,GAAb;AAaA,MAAIG,KAAK,GAAG;AACVN,IAAAA,KAAK,EAAE,KADG;AACIN,IAAAA,GAAG,EAAE,KADT;AAEVG,IAAAA,QAAQ,EAAE,CAACb,IAAI,CAACoB,OAAL,CAAaX,eAAb,CAAD,CAFA;AAEiC;AAC3CU,IAAAA,OAAO,EAAE;AAHC,GAAZ;AAKAb,EAAAA,KAAK,CAACiB,IAAN,CAAWR,MAAX,EAAmBO,KAAnB;AACAnB,EAAAA,gBAAgB,CAACqB,OAAjB,CAAyB,UAASC,IAAT,EAAe;AACtCnB,IAAAA,KAAK,CAACiB,IAAN,CAAWE,IAAX;AACD,GAFD;AAGA,SAAO;AACLZ,IAAAA,QAAQ,EAAEP,KADL;AAELQ,IAAAA,QAAQ,EAAEb,QAFL;AAGLkB,IAAAA,OAAO,EAAE;AAHJ,GAAP;AAKD,CA1CD","sourcesContent":["module.exports = function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var ALLOWED_COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE\n  ]\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ].concat(ALLOWED_COMMENTS),\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.push(OBJECT, ARRAY);\n  ALLOWED_COMMENTS.forEach(function(rule) {\n    TYPES.push(rule)\n  })\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};"]},"metadata":{},"sourceType":"script"}