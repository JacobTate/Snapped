{"ast":null,"code":"module.exports =\n/**\n* Known issues:\n*\n* - invalid hex string literals will be recognized as a double quoted strings\n*   but 'x' at the beginning of string will not be matched\n*\n* - delimited string literals are not checked for matching end delimiter\n*   (not possible to do with js regexp)\n*\n* - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n*   also, content of token string is not validated to contain only valid D tokens\n*\n* - special token sequence rule is not strictly following D grammar (anything following #line\n*   up to the end of line is matched as special token sequence)\n*/\nfunction (hljs) {\n  /**\n   * Language keywords\n   *\n   * @type {Object}\n   */\n  var D_KEYWORDS = {\n    keyword: 'abstract alias align asm assert auto body break byte case cast catch class ' + 'const continue debug default delete deprecated do else enum export extern final ' + 'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' + 'interface invariant is lazy macro mixin module new nothrow out override package ' + 'pragma private protected public pure ref return scope shared static struct ' + 'super switch synchronized template this throw try typedef typeid typeof union ' + 'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' + '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',\n    built_in: 'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' + 'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' + 'wstring',\n    literal: 'false null true'\n  };\n  /**\n   * Number literal regexps\n   *\n   * @type {String}\n   */\n\n  var decimal_integer_re = '(0|[1-9][\\\\d_]*)',\n      decimal_integer_nosus_re = '(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',\n      binary_integer_re = '0[bB][01_]+',\n      hexadecimal_digits_re = '([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',\n      hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,\n      decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',\n      decimal_float_re = '(' + decimal_integer_nosus_re + '(\\\\.\\\\d*|' + decimal_exponent_re + ')|' + '\\\\d+\\\\.' + decimal_integer_nosus_re + decimal_integer_nosus_re + '|' + '\\\\.' + decimal_integer_re + decimal_exponent_re + '?' + ')',\n      hexadecimal_float_re = '(0[xX](' + hexadecimal_digits_re + '\\\\.' + hexadecimal_digits_re + '|' + '\\\\.?' + hexadecimal_digits_re + ')[pP][+-]?' + decimal_integer_nosus_re + ')',\n      integer_re = '(' + decimal_integer_re + '|' + binary_integer_re + '|' + hexadecimal_integer_re + ')',\n      float_re = '(' + hexadecimal_float_re + '|' + decimal_float_re + ')';\n  /**\n   * Escape sequence supported in D string and character literals\n   *\n   * @type {String}\n   */\n\n  var escape_sequence_re = '\\\\\\\\(' + '[\\'\"\\\\?\\\\\\\\abfnrtv]|' + // common escapes\n  'u[\\\\dA-Fa-f]{4}|' + // four hex digit unicode codepoint\n  '[0-7]{1,3}|' + // one to three octal digit ascii char code\n  'x[\\\\dA-Fa-f]{2}|' + // two hex digit ascii char code\n  'U[\\\\dA-Fa-f]{8}' + // eight hex digit unicode codepoint\n  ')|' + '&[a-zA-Z\\\\d]{2,};'; // named character entity\n\n  /**\n   * D integer number literals\n   *\n   * @type {Object}\n   */\n\n  var D_INTEGER_MODE = {\n    className: 'number',\n    begin: '\\\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',\n    relevance: 0\n  };\n  /**\n   * [D_FLOAT_MODE description]\n   * @type {Object}\n   */\n\n  var D_FLOAT_MODE = {\n    className: 'number',\n    begin: '\\\\b(' + float_re + '([fF]|L|i|[fF]i|Li)?|' + integer_re + '(i|[fF]i|Li)' + ')',\n    relevance: 0\n  };\n  /**\n   * D character literal\n   *\n   * @type {Object}\n   */\n\n  var D_CHARACTER_MODE = {\n    className: 'string',\n    begin: '\\'(' + escape_sequence_re + '|.)',\n    end: '\\'',\n    illegal: '.'\n  };\n  /**\n   * D string escape sequence\n   *\n   * @type {Object}\n   */\n\n  var D_ESCAPE_SEQUENCE = {\n    begin: escape_sequence_re,\n    relevance: 0\n  };\n  /**\n   * D double quoted string literal\n   *\n   * @type {Object}\n   */\n\n  var D_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    contains: [D_ESCAPE_SEQUENCE],\n    end: '\"[cwd]?'\n  };\n  /**\n   * D wysiwyg and delimited string literals\n   *\n   * @type {Object}\n   */\n\n  var D_WYSIWYG_DELIMITED_STRING_MODE = {\n    className: 'string',\n    begin: '[rq]\"',\n    end: '\"[cwd]?',\n    relevance: 5\n  };\n  /**\n   * D alternate wysiwyg string literal\n   *\n   * @type {Object}\n   */\n\n  var D_ALTERNATE_WYSIWYG_STRING_MODE = {\n    className: 'string',\n    begin: '`',\n    end: '`[cwd]?'\n  };\n  /**\n   * D hexadecimal string literal\n   *\n   * @type {Object}\n   */\n\n  var D_HEX_STRING_MODE = {\n    className: 'string',\n    begin: 'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',\n    relevance: 10\n  };\n  /**\n   * D delimited string literal\n   *\n   * @type {Object}\n   */\n\n  var D_TOKEN_STRING_MODE = {\n    className: 'string',\n    begin: 'q\"\\\\{',\n    end: '\\\\}\"'\n  };\n  /**\n   * Hashbang support\n   *\n   * @type {Object}\n   */\n\n  var D_HASHBANG_MODE = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$',\n    relevance: 5\n  };\n  /**\n   * D special token sequence\n   *\n   * @type {Object}\n   */\n\n  var D_SPECIAL_TOKEN_SEQUENCE_MODE = {\n    className: 'meta',\n    begin: '#(line)',\n    end: '$',\n    relevance: 5\n  };\n  /**\n   * D attributes\n   *\n   * @type {Object}\n   */\n\n  var D_ATTRIBUTE_MODE = {\n    className: 'keyword',\n    begin: '@[a-zA-Z_][a-zA-Z_\\\\d]*'\n  };\n  /**\n   * D nesting comment\n   *\n   * @type {Object}\n   */\n\n  var D_NESTING_COMMENT_MODE = hljs.COMMENT('\\\\/\\\\+', '\\\\+\\\\/', {\n    contains: ['self'],\n    relevance: 10\n  });\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: D_KEYWORDS,\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, D_NESTING_COMMENT_MODE, D_HEX_STRING_MODE, D_STRING_MODE, D_WYSIWYG_DELIMITED_STRING_MODE, D_ALTERNATE_WYSIWYG_STRING_MODE, D_TOKEN_STRING_MODE, D_FLOAT_MODE, D_INTEGER_MODE, D_CHARACTER_MODE, D_HASHBANG_MODE, D_SPECIAL_TOKEN_SEQUENCE_MODE, D_ATTRIBUTE_MODE]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/d.js"],"names":["module","exports","hljs","D_KEYWORDS","keyword","built_in","literal","decimal_integer_re","decimal_integer_nosus_re","binary_integer_re","hexadecimal_digits_re","hexadecimal_integer_re","decimal_exponent_re","decimal_float_re","hexadecimal_float_re","integer_re","float_re","escape_sequence_re","D_INTEGER_MODE","className","begin","relevance","D_FLOAT_MODE","D_CHARACTER_MODE","end","illegal","D_ESCAPE_SEQUENCE","D_STRING_MODE","contains","D_WYSIWYG_DELIMITED_STRING_MODE","D_ALTERNATE_WYSIWYG_STRING_MODE","D_HEX_STRING_MODE","D_TOKEN_STRING_MODE","D_HASHBANG_MODE","D_SPECIAL_TOKEN_SEQUENCE_MODE","D_ATTRIBUTE_MODE","D_NESTING_COMMENT_MODE","COMMENT","lexemes","UNDERSCORE_IDENT_RE","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE"],"mappings":"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","sourcesContent":["module.exports = /**\n * Known issues:\n *\n * - invalid hex string literals will be recognized as a double quoted strings\n *   but 'x' at the beginning of string will not be matched\n *\n * - delimited string literals are not checked for matching end delimiter\n *   (not possible to do with js regexp)\n *\n * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n *   also, content of token string is not validated to contain only valid D tokens\n *\n * - special token sequence rule is not strictly following D grammar (anything following #line\n *   up to the end of line is matched as special token sequence)\n */\n\nfunction(hljs) {\n  /**\n   * Language keywords\n   *\n   * @type {Object}\n   */\n  var D_KEYWORDS = {\n    keyword:\n      'abstract alias align asm assert auto body break byte case cast catch class ' +\n      'const continue debug default delete deprecated do else enum export extern final ' +\n      'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +\n      'interface invariant is lazy macro mixin module new nothrow out override package ' +\n      'pragma private protected public pure ref return scope shared static struct ' +\n      'super switch synchronized template this throw try typedef typeid typeof union ' +\n      'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +\n      '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',\n    built_in:\n      'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +\n      'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +\n      'wstring',\n    literal:\n      'false null true'\n  };\n\n  /**\n   * Number literal regexps\n   *\n   * @type {String}\n   */\n  var decimal_integer_re = '(0|[1-9][\\\\d_]*)',\n    decimal_integer_nosus_re = '(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',\n    binary_integer_re = '0[bB][01_]+',\n    hexadecimal_digits_re = '([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',\n    hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,\n\n    decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',\n    decimal_float_re = '(' + decimal_integer_nosus_re + '(\\\\.\\\\d*|' + decimal_exponent_re + ')|' +\n                '\\\\d+\\\\.' + decimal_integer_nosus_re + decimal_integer_nosus_re + '|' +\n                '\\\\.' + decimal_integer_re + decimal_exponent_re + '?' +\n              ')',\n    hexadecimal_float_re = '(0[xX](' +\n                  hexadecimal_digits_re + '\\\\.' + hexadecimal_digits_re + '|'+\n                  '\\\\.?' + hexadecimal_digits_re +\n                 ')[pP][+-]?' + decimal_integer_nosus_re + ')',\n\n    integer_re = '(' +\n      decimal_integer_re + '|' +\n      binary_integer_re  + '|' +\n       hexadecimal_integer_re   +\n    ')',\n\n    float_re = '(' +\n      hexadecimal_float_re + '|' +\n      decimal_float_re  +\n    ')';\n\n  /**\n   * Escape sequence supported in D string and character literals\n   *\n   * @type {String}\n   */\n  var escape_sequence_re = '\\\\\\\\(' +\n              '[\\'\"\\\\?\\\\\\\\abfnrtv]|' +  // common escapes\n              'u[\\\\dA-Fa-f]{4}|' +     // four hex digit unicode codepoint\n              '[0-7]{1,3}|' +       // one to three octal digit ascii char code\n              'x[\\\\dA-Fa-f]{2}|' +    // two hex digit ascii char code\n              'U[\\\\dA-Fa-f]{8}' +      // eight hex digit unicode codepoint\n              ')|' +\n              '&[a-zA-Z\\\\d]{2,};';      // named character entity\n\n  /**\n   * D integer number literals\n   *\n   * @type {Object}\n   */\n  var D_INTEGER_MODE = {\n    className: 'number',\n      begin: '\\\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',\n      relevance: 0\n  };\n\n  /**\n   * [D_FLOAT_MODE description]\n   * @type {Object}\n   */\n  var D_FLOAT_MODE = {\n    className: 'number',\n    begin: '\\\\b(' +\n        float_re + '([fF]|L|i|[fF]i|Li)?|' +\n        integer_re + '(i|[fF]i|Li)' +\n      ')',\n    relevance: 0\n  };\n\n  /**\n   * D character literal\n   *\n   * @type {Object}\n   */\n  var D_CHARACTER_MODE = {\n    className: 'string',\n    begin: '\\'(' + escape_sequence_re + '|.)', end: '\\'',\n    illegal: '.'\n  };\n\n  /**\n   * D string escape sequence\n   *\n   * @type {Object}\n   */\n  var D_ESCAPE_SEQUENCE = {\n    begin: escape_sequence_re,\n    relevance: 0\n  };\n\n  /**\n   * D double quoted string literal\n   *\n   * @type {Object}\n   */\n  var D_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    contains: [D_ESCAPE_SEQUENCE],\n    end: '\"[cwd]?'\n  };\n\n  /**\n   * D wysiwyg and delimited string literals\n   *\n   * @type {Object}\n   */\n  var D_WYSIWYG_DELIMITED_STRING_MODE = {\n    className: 'string',\n    begin: '[rq]\"',\n    end: '\"[cwd]?',\n    relevance: 5\n  };\n\n  /**\n   * D alternate wysiwyg string literal\n   *\n   * @type {Object}\n   */\n  var D_ALTERNATE_WYSIWYG_STRING_MODE = {\n    className: 'string',\n    begin: '`',\n    end: '`[cwd]?'\n  };\n\n  /**\n   * D hexadecimal string literal\n   *\n   * @type {Object}\n   */\n  var D_HEX_STRING_MODE = {\n    className: 'string',\n    begin: 'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',\n    relevance: 10\n  };\n\n  /**\n   * D delimited string literal\n   *\n   * @type {Object}\n   */\n  var D_TOKEN_STRING_MODE = {\n    className: 'string',\n    begin: 'q\"\\\\{',\n    end: '\\\\}\"'\n  };\n\n  /**\n   * Hashbang support\n   *\n   * @type {Object}\n   */\n  var D_HASHBANG_MODE = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D special token sequence\n   *\n   * @type {Object}\n   */\n  var D_SPECIAL_TOKEN_SEQUENCE_MODE = {\n    className: 'meta',\n    begin: '#(line)',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D attributes\n   *\n   * @type {Object}\n   */\n  var D_ATTRIBUTE_MODE = {\n    className: 'keyword',\n    begin: '@[a-zA-Z_][a-zA-Z_\\\\d]*'\n  };\n\n  /**\n   * D nesting comment\n   *\n   * @type {Object}\n   */\n  var D_NESTING_COMMENT_MODE = hljs.COMMENT(\n    '\\\\/\\\\+',\n    '\\\\+\\\\/',\n    {\n      contains: ['self'],\n      relevance: 10\n    }\n  );\n\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: D_KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        D_NESTING_COMMENT_MODE,\n        D_HEX_STRING_MODE,\n        D_STRING_MODE,\n        D_WYSIWYG_DELIMITED_STRING_MODE,\n        D_ALTERNATE_WYSIWYG_STRING_MODE,\n        D_TOKEN_STRING_MODE,\n        D_FLOAT_MODE,\n        D_INTEGER_MODE,\n        D_CHARACTER_MODE,\n        D_HASHBANG_MODE,\n        D_SPECIAL_TOKEN_SEQUENCE_MODE,\n        D_ATTRIBUTE_MODE\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}