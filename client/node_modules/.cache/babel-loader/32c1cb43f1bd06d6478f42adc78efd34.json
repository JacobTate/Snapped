{"ast":null,"code":"module.exports = function (hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext',\n    // only 6\n    contains: [hljs.COMMENT('\"', '\"'), hljs.APOS_STRING_MODE, {\n      className: 'type',\n      begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n      relevance: 0\n    }, {\n      begin: VAR_IDENT_RE + ':',\n      relevance: 0\n    }, hljs.C_NUMBER_MODE, SYMBOL, CHAR, {\n      // This looks more complicated than needed to avoid combinatorial\n      // explosion under V8. It effectively means `| var1 var2 ... |` with\n      // whitespace adjacent to `|` being optional.\n      begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n      returnBegin: true,\n      end: /\\|/,\n      illegal: /\\S/,\n      contains: [{\n        begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE\n      }]\n    }, {\n      begin: '\\\\#\\\\(',\n      end: '\\\\)',\n      contains: [hljs.APOS_STRING_MODE, CHAR, hljs.C_NUMBER_MODE, SYMBOL]\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/smalltalk.js"],"names":["module","exports","hljs","VAR_IDENT_RE","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,YAAY,GAAG,oBAAnB;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,KAAK,EAAE;AAFE,GAAX;AAIA,MAAIC,MAAM,GAAG;AACXF,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE,MAAMJ,IAAI,CAACM;AAFP,GAAb;AAIA,SAAO;AACLC,IAAAA,OAAO,EAAE,CAAC,IAAD,CADJ;AAELC,IAAAA,QAAQ,EAAE,uCAFL;AAE8C;AACnDC,IAAAA,QAAQ,EAAE,CACRT,IAAI,CAACU,OAAL,CAAa,GAAb,EAAkB,GAAlB,CADQ,EAERV,IAAI,CAACW,gBAFG,EAGR;AACER,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,uBAFT;AAGEQ,MAAAA,SAAS,EAAE;AAHb,KAHQ,EAQR;AACER,MAAAA,KAAK,EAAEH,YAAY,GAAG,GADxB;AAEEW,MAAAA,SAAS,EAAE;AAFb,KARQ,EAYRZ,IAAI,CAACa,aAZG,EAaRR,MAbQ,EAcRH,IAdQ,EAeR;AACE;AACA;AACA;AACAE,MAAAA,KAAK,EAAE,YAAYH,YAAZ,GAA2B,OAA3B,GAAqCA,YAArC,GAAoD,WAJ7D;AAKEa,MAAAA,WAAW,EAAE,IALf;AAKqBC,MAAAA,GAAG,EAAE,IAL1B;AAMEC,MAAAA,OAAO,EAAE,IANX;AAOEP,MAAAA,QAAQ,EAAE,CAAC;AAACL,QAAAA,KAAK,EAAE,eAAeH;AAAvB,OAAD;AAPZ,KAfQ,EAwBR;AACEG,MAAAA,KAAK,EAAE,QADT;AACmBW,MAAAA,GAAG,EAAE,KADxB;AAEEN,MAAAA,QAAQ,EAAE,CACRT,IAAI,CAACW,gBADG,EAERT,IAFQ,EAGRF,IAAI,CAACa,aAHG,EAIRR,MAJQ;AAFZ,KAxBQ;AAHL,GAAP;AAsCD,CAhDD","sourcesContent":["module.exports = function(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true, end: /\\|/,\n        illegal: /\\S/,\n        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n      },\n      {\n        begin: '\\\\#\\\\(', end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}