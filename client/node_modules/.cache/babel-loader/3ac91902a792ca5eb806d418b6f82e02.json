{"ast":null,"code":"module.exports = function (hljs) {\n  var LITERAL = {\n    className: 'literal',\n    begin: '[\\\\+\\\\-]',\n    relevance: 0\n  };\n  return {\n    aliases: ['bf'],\n    contains: [hljs.COMMENT('[^\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]', '[\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]', {\n      returnEnd: true,\n      relevance: 0\n    }), {\n      className: 'title',\n      begin: '[\\\\[\\\\]]',\n      relevance: 0\n    }, {\n      className: 'string',\n      begin: '[\\\\.,]',\n      relevance: 0\n    }, {\n      // this mode works as the only relevance counter\n      begin: /(?:\\+\\+|\\-\\-)/,\n      contains: [LITERAL]\n    }, LITERAL]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/brainfuck.js"],"names":["module","exports","hljs","LITERAL","className","begin","relevance","aliases","contains","COMMENT","returnEnd"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAc;AAC7B,MAAIC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE,SADC;AAEZC,IAAAA,KAAK,EAAE,UAFK;AAGZC,IAAAA,SAAS,EAAE;AAHC,GAAd;AAKA,SAAO;AACLC,IAAAA,OAAO,EAAE,CAAC,IAAD,CADJ;AAELC,IAAAA,QAAQ,EAAE,CACRN,IAAI,CAACO,OAAL,CACE,4BADF,EAEE,2BAFF,EAGE;AACEC,MAAAA,SAAS,EAAE,IADb;AAEEJ,MAAAA,SAAS,EAAE;AAFb,KAHF,CADQ,EASR;AACEF,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KATQ,EAcR;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KAdQ,EAmBR;AACE;AACAD,MAAAA,KAAK,EAAE,eAFT;AAGEG,MAAAA,QAAQ,EAAE,CAACL,OAAD;AAHZ,KAnBQ,EAwBRA,OAxBQ;AAFL,GAAP;AA6BD,CAnCD","sourcesContent":["module.exports = function(hljs){\n  var LITERAL = {\n    className: 'literal',\n    begin: '[\\\\+\\\\-]',\n    relevance: 0\n  };\n  return {\n    aliases: ['bf'],\n    contains: [\n      hljs.COMMENT(\n        '[^\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        '[\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        {\n          returnEnd: true,\n          relevance: 0\n        }\n      ),\n      {\n        className: 'title',\n        begin: '[\\\\[\\\\]]',\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '[\\\\.,]',\n        relevance: 0\n      },\n      {\n        // this mode works as the only relevance counter\n        begin: /(?:\\+\\+|\\-\\-)/,\n        contains: [LITERAL]\n      },\n      LITERAL\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}