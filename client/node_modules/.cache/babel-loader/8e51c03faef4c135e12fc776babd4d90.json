{"ast":null,"code":"module.exports = function (hljs) {\n  var NIX_KEYWORDS = {\n    keyword: 'rec with let in inherit assert if else then',\n    literal: 'true false or and null',\n    built_in: 'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' + 'toString derivation'\n  };\n  var ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /}/,\n    keywords: NIX_KEYWORDS\n  };\n  var ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: /\\S+/\n    }]\n  };\n  var STRING = {\n    className: 'string',\n    contains: [ANTIQUOTE],\n    variants: [{\n      begin: \"''\",\n      end: \"''\"\n    }, {\n      begin: '\"',\n      end: '\"'\n    }]\n  };\n  var EXPRESSIONS = [hljs.NUMBER_MODE, hljs.HASH_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRING, ATTRS];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/nix.js"],"names":["module","exports","hljs","NIX_KEYWORDS","keyword","literal","built_in","ANTIQUOTE","className","begin","end","keywords","ATTRS","returnBegin","relevance","contains","STRING","variants","EXPRESSIONS","NUMBER_MODE","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","aliases"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EACL,6CAFe;AAGjBC,IAAAA,OAAO,EACL,wBAJe;AAKjBC,IAAAA,QAAQ,EACN,yEACA;AAPe,GAAnB;AASA,MAAIC,SAAS,GAAG;AACdC,IAAAA,SAAS,EAAE,OADG;AAEdC,IAAAA,KAAK,EAAE,MAFO;AAGdC,IAAAA,GAAG,EAAE,GAHS;AAIdC,IAAAA,QAAQ,EAAER;AAJI,GAAhB;AAMA,MAAIS,KAAK,GAAG;AACVH,IAAAA,KAAK,EAAE,sBADG;AACqBI,IAAAA,WAAW,EAAE,IADlC;AAEVC,IAAAA,SAAS,EAAE,CAFD;AAGVC,IAAAA,QAAQ,EAAE,CACR;AACEP,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADQ;AAHA,GAAZ;AAUA,MAAIO,MAAM,GAAG;AACXR,IAAAA,SAAS,EAAE,QADA;AAEXO,IAAAA,QAAQ,EAAE,CAACR,SAAD,CAFC;AAGXU,IAAAA,QAAQ,EAAE,CACR;AAACR,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,GAAG,EAAE;AAAnB,KADQ,EAER;AAACD,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAFQ;AAHC,GAAb;AAQA,MAAIQ,WAAW,GAAG,CAChBhB,IAAI,CAACiB,WADW,EAEhBjB,IAAI,CAACkB,iBAFW,EAGhBlB,IAAI,CAACmB,oBAHW,EAIhBL,MAJgB,EAKhBJ,KALgB,CAAlB;AAOAL,EAAAA,SAAS,CAACQ,QAAV,GAAqBG,WAArB;AACA,SAAO;AACLI,IAAAA,OAAO,EAAE,CAAC,OAAD,CADJ;AAELX,IAAAA,QAAQ,EAAER,YAFL;AAGLY,IAAAA,QAAQ,EAAEG;AAHL,GAAP;AAKD,CA/CD","sourcesContent":["module.exports = function(hljs) {\n  var NIX_KEYWORDS = {\n    keyword:\n      'rec with let in inherit assert if else then',\n    literal:\n      'true false or and null',\n    built_in:\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +\n      'toString derivation'\n  };\n  var ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /}/,\n    keywords: NIX_KEYWORDS\n  };\n  var ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/, returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: /\\S+/\n      }\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    contains: [ANTIQUOTE],\n    variants: [\n      {begin: \"''\", end: \"''\"},\n      {begin: '\"', end: '\"'}\n    ]\n  };\n  var EXPRESSIONS = [\n    hljs.NUMBER_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    ATTRS\n  ];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n};"]},"metadata":{},"sourceType":"script"}