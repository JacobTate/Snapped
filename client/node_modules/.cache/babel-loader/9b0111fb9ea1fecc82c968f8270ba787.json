{"ast":null,"code":"module.exports = function (hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS = 'assembly module package import alias class interface object given value ' + 'assign void function new of extends satisfies abstracts in out return ' + 'break continue throw assert dynamic if else switch case for while try ' + 'catch finally then let this outer super is exists nonempty'; // 7.4.1 Declaration Modifiers\n\n  var DECLARATION_MODIFIERS = 'shared abstract formal default actual variable late native deprecated' + 'final sealed annotation suppressWarnings small'; // 7.4.2 Documentation\n\n  var DOCUMENTATION = 'doc by license see throws tagged';\n  var SUBST = {\n    className: 'subst',\n    excludeBegin: true,\n    excludeEnd: true,\n    begin: /``/,\n    end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [{\n    // verbatim string\n    className: 'string',\n    begin: '\"\"\"',\n    end: '\"\"\"',\n    relevance: 10\n  }, {\n    // string literal or template\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    contains: [SUBST]\n  }, {\n    // character literal\n    className: 'string',\n    begin: \"'\",\n    end: \"'\"\n  }, {\n    // numeric literal\n    className: 'number',\n    begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n    relevance: 0\n  }];\n  SUBST.contains = EXPRESSIONS;\n  return {\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), {\n      // compiler annotation\n      className: 'meta',\n      begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n    }].concat(EXPRESSIONS)\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/ceylon.js"],"names":["module","exports","hljs","KEYWORDS","DECLARATION_MODIFIERS","DOCUMENTATION","SUBST","className","excludeBegin","excludeEnd","begin","end","keywords","relevance","EXPRESSIONS","contains","keyword","meta","illegal","C_LINE_COMMENT_MODE","COMMENT","concat"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B;AACA,MAAIC,QAAQ,GACV,6EACA,wEADA,GAEA,wEAFA,GAGA,4DAJF,CAF8B,CAO9B;;AACA,MAAIC,qBAAqB,GACvB,0EACA,gDAFF,CAR8B,CAW9B;;AACA,MAAIC,aAAa,GACf,kCADF;AAEA,MAAIC,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAE,OADD;AACUC,IAAAA,YAAY,EAAE,IADxB;AAC8BC,IAAAA,UAAU,EAAE,IAD1C;AAEVC,IAAAA,KAAK,EAAE,IAFG;AAEGC,IAAAA,GAAG,EAAE,IAFR;AAGVC,IAAAA,QAAQ,EAAET,QAHA;AAIVU,IAAAA,SAAS,EAAE;AAJD,GAAZ;AAMA,MAAIC,WAAW,GAAG,CAChB;AACE;AACAP,IAAAA,SAAS,EAAE,QAFb;AAGEG,IAAAA,KAAK,EAAE,KAHT;AAIEC,IAAAA,GAAG,EAAE,KAJP;AAKEE,IAAAA,SAAS,EAAE;AALb,GADgB,EAQhB;AACE;AACAN,IAAAA,SAAS,EAAE,QAFb;AAGEG,IAAAA,KAAK,EAAE,GAHT;AAGcC,IAAAA,GAAG,EAAE,GAHnB;AAIEI,IAAAA,QAAQ,EAAE,CAACT,KAAD;AAJZ,GARgB,EAchB;AACE;AACAC,IAAAA,SAAS,EAAE,QAFb;AAGEG,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,GAAG,EAAE;AAJP,GAdgB,EAoBhB;AACE;AACAJ,IAAAA,SAAS,EAAE,QAFb;AAGEG,IAAAA,KAAK,EAAE,+EAHT;AAIEG,IAAAA,SAAS,EAAE;AAJb,GApBgB,CAAlB;AA2BAP,EAAAA,KAAK,CAACS,QAAN,GAAiBD,WAAjB;AAEA,SAAO;AACLF,IAAAA,QAAQ,EAAE;AACRI,MAAAA,OAAO,EAAEb,QAAQ,GAAG,GAAX,GAAiBC,qBADlB;AAERa,MAAAA,IAAI,EAAEZ;AAFE,KADL;AAKLa,IAAAA,OAAO,EAAE,wBALJ;AAMLH,IAAAA,QAAQ,EAAE,CACRb,IAAI,CAACiB,mBADG,EAERjB,IAAI,CAACkB,OAAL,CAAa,MAAb,EAAqB,MAArB,EAA6B;AAACL,MAAAA,QAAQ,EAAE,CAAC,MAAD;AAAX,KAA7B,CAFQ,EAGR;AACE;AACAR,MAAAA,SAAS,EAAE,MAFb;AAGEG,MAAAA,KAAK,EAAE;AAHT,KAHQ,EAQRW,MARQ,CAQDP,WARC;AANL,GAAP;AAgBD,CAjED","sourcesContent":["module.exports = function(hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  var DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  var DOCUMENTATION =\n    'doc by license see throws tagged';\n  var SUBST = {\n    className: 'subst', excludeBegin: true, excludeEnd: true,\n    begin: /``/, end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"', end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n};"]},"metadata":{},"sourceType":"script"}