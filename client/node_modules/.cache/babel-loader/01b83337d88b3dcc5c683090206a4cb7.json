{"ast":null,"code":"module.exports = function (hljs) {\n  var commentMode = hljs.COMMENT(/\\(\\*/, /\\*\\)/);\n  var nonTerminalMode = {\n    className: \"attribute\",\n    begin: /^[ ]*[a-zA-Z][a-zA-Z-_]*([\\s-_]+[a-zA-Z][a-zA-Z]*)*/\n  };\n  var specialSequenceMode = {\n    className: \"meta\",\n    begin: /\\?.*\\?/\n  };\n  var ruleBodyMode = {\n    begin: /=/,\n    end: /[.;]/,\n    contains: [commentMode, specialSequenceMode, {\n      // terminals\n      className: 'string',\n      variants: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n        begin: '`',\n        end: '`'\n      }]\n    }]\n  };\n  return {\n    illegal: /\\S/,\n    contains: [commentMode, nonTerminalMode, ruleBodyMode]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/ebnf.js"],"names":["module","exports","hljs","commentMode","COMMENT","nonTerminalMode","className","begin","specialSequenceMode","ruleBodyMode","end","contains","variants","APOS_STRING_MODE","QUOTE_STRING_MODE","illegal"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC5B,MAAIC,WAAW,GAAGD,IAAI,CAACE,OAAL,CAAa,MAAb,EAAqB,MAArB,CAAlB;AAEA,MAAIC,eAAe,GAAG;AAClBC,IAAAA,SAAS,EAAE,WADO;AAElBC,IAAAA,KAAK,EAAE;AAFW,GAAtB;AAKA,MAAIC,mBAAmB,GAAG;AACtBF,IAAAA,SAAS,EAAE,MADW;AAEtBC,IAAAA,KAAK,EAAE;AAFe,GAA1B;AAKA,MAAIE,YAAY,GAAG;AACfF,IAAAA,KAAK,EAAE,GADQ;AACHG,IAAAA,GAAG,EAAE,MADF;AAEfC,IAAAA,QAAQ,EAAE,CACNR,WADM,EAENK,mBAFM,EAGN;AACE;AACAF,MAAAA,SAAS,EAAE,QAFb;AAGEM,MAAAA,QAAQ,EAAE,CACRV,IAAI,CAACW,gBADG,EAERX,IAAI,CAACY,iBAFG,EAGR;AAACP,QAAAA,KAAK,EAAE,GAAR;AAAaG,QAAAA,GAAG,EAAE;AAAlB,OAHQ;AAHZ,KAHM;AAFK,GAAnB;AAiBA,SAAO;AACHK,IAAAA,OAAO,EAAE,IADN;AAEHJ,IAAAA,QAAQ,EAAE,CACNR,WADM,EAENE,eAFM,EAGNI,YAHM;AAFP,GAAP;AAQH,CAtCD","sourcesContent":["module.exports = function(hljs) {\n    var commentMode = hljs.COMMENT(/\\(\\*/, /\\*\\)/);\n\n    var nonTerminalMode = {\n        className: \"attribute\",\n        begin: /^[ ]*[a-zA-Z][a-zA-Z-_]*([\\s-_]+[a-zA-Z][a-zA-Z]*)*/\n    };\n\n    var specialSequenceMode = {\n        className: \"meta\",\n        begin: /\\?.*\\?/\n    };\n\n    var ruleBodyMode = {\n        begin: /=/, end: /[.;]/,\n        contains: [\n            commentMode,\n            specialSequenceMode,\n            {\n              // terminals\n              className: 'string',\n              variants: [\n                hljs.APOS_STRING_MODE,\n                hljs.QUOTE_STRING_MODE,\n                {begin: '`', end: '`'},\n              ]\n            },\n        ]\n    };\n\n    return {\n        illegal: /\\S/,\n        contains: [\n            commentMode,\n            nonTerminalMode,\n            ruleBodyMode\n        ]\n    };\n};"]},"metadata":{},"sourceType":"script"}