{"ast":null,"code":"module.exports = function (hljs) {\n  var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var GCODE_CLOSE_RE = '\\\\%';\n  var GCODE_KEYWORDS = 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' + 'EQ LT GT NE GE LE OR XOR';\n  var GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  var GCODE_CODE = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT(/\\(/, /\\)/), hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE\n  }), hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  }), {\n    className: 'name',\n    begin: '([G])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'name',\n    begin: '([M])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'attr',\n    begin: '(VC|VS|#)',\n    end: '(\\\\d+)'\n  }, {\n    className: 'attr',\n    begin: '(VZOFX|VZOFY|VZOFZ)'\n  }, {\n    className: 'built_in',\n    begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n    end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n  }, {\n    className: 'symbol',\n    variants: [{\n      begin: 'N',\n      end: '\\\\d+',\n      illegal: '\\\\W'\n    }]\n  }];\n  return {\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    lexemes: GCODE_IDENT_RE,\n    keywords: GCODE_KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: GCODE_CLOSE_RE\n    }, GCODE_START].concat(GCODE_CODE)\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/gcode.js"],"names":["module","exports","hljs","GCODE_IDENT_RE","GCODE_CLOSE_RE","GCODE_KEYWORDS","GCODE_START","className","begin","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","inherit","C_NUMBER_MODE","C_NUMBER_RE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants","aliases","case_insensitive","lexemes","keywords","contains","concat"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC5B,MAAIC,cAAc,GAAG,mBAArB;AACA,MAAIC,cAAc,GAAG,KAArB;AACA,MAAIC,cAAc,GAChB,sEACA,0BAFF;AAGA,MAAIC,WAAW,GAAG;AACdC,IAAAA,SAAS,EAAE,MADG;AAEdC,IAAAA,KAAK,EAAE;AAFO,GAAlB;AAIA,MAAIC,UAAU,GAAG,CACbP,IAAI,CAACQ,mBADQ,EAEbR,IAAI,CAACS,oBAFQ,EAGbT,IAAI,CAACU,OAAL,CAAa,IAAb,EAAmB,IAAnB,CAHa,EAIbV,IAAI,CAACW,OAAL,CAAaX,IAAI,CAACY,aAAlB,EAAiC;AAACN,IAAAA,KAAK,EAAE,mCAAmCN,IAAI,CAACa;AAAhD,GAAjC,CAJa,EAKbb,IAAI,CAACW,OAAL,CAAaX,IAAI,CAACc,gBAAlB,EAAoC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAApC,CALa,EAMbf,IAAI,CAACW,OAAL,CAAaX,IAAI,CAACgB,iBAAlB,EAAqC;AAACD,IAAAA,OAAO,EAAE;AAAV,GAArC,CANa,EAOb;AACIV,IAAAA,SAAS,EAAE,MADf;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAPa,EAWb;AACID,IAAAA,SAAS,EAAE,MADf;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAXa,EAeb;AACID,IAAAA,SAAS,EAAE,MADf;AAEIC,IAAAA,KAAK,EAAE,WAFX;AAGIW,IAAAA,GAAG,EAAE;AAHT,GAfa,EAoBb;AACIZ,IAAAA,SAAS,EAAE,MADf;AAEIC,IAAAA,KAAK,EAAE;AAFX,GApBa,EAwBb;AACID,IAAAA,SAAS,EAAE,UADf;AAEIC,IAAAA,KAAK,EAAE,4DAFX;AAGIW,IAAAA,GAAG,EAAE;AAHT,GAxBa,EA6Bb;AACIZ,IAAAA,SAAS,EAAE,QADf;AAEIa,IAAAA,QAAQ,EAAE,CACN;AACIZ,MAAAA,KAAK,EAAE,GADX;AACgBW,MAAAA,GAAG,EAAE,MADrB;AAEIF,MAAAA,OAAO,EAAE;AAFb,KADM;AAFd,GA7Ba,CAAjB;AAwCA,SAAO;AACHI,IAAAA,OAAO,EAAE,CAAC,IAAD,CADN;AAEH;AACA;AACAC,IAAAA,gBAAgB,EAAE,IAJf;AAKHC,IAAAA,OAAO,EAAEpB,cALN;AAMHqB,IAAAA,QAAQ,EAAEnB,cANP;AAOHoB,IAAAA,QAAQ,EAAE,CACN;AACIlB,MAAAA,SAAS,EAAE,MADf;AAEIC,MAAAA,KAAK,EAAEJ;AAFX,KADM,EAKNE,WALM,EAMRoB,MANQ,CAMDjB,UANC;AAPP,GAAP;AAeH,CAjED","sourcesContent":["module.exports = function(hljs) {\n    var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n    var GCODE_CLOSE_RE = '\\\\%';\n    var GCODE_KEYWORDS =\n      'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR';\n    var GCODE_START = {\n        className: 'meta',\n        begin: '([O])([0-9]+)'\n    };\n    var GCODE_CODE = [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.COMMENT(/\\(/, /\\)/),\n        hljs.inherit(hljs.C_NUMBER_MODE, {begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE}),\n        hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n        hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n        {\n            className: 'name',\n            begin: '([G])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'name',\n            begin: '([M])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'attr',\n            begin: '(VC|VS|#)',\n            end: '(\\\\d+)'\n        },\n        {\n            className: 'attr',\n            begin: '(VZOFX|VZOFY|VZOFZ)'\n        },\n        {\n            className: 'built_in',\n            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n            end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n        },\n        {\n            className: 'symbol',\n            variants: [\n                {\n                    begin: 'N', end: '\\\\d+',\n                    illegal: '\\\\W'\n                }\n            ]\n        }\n    ];\n\n    return {\n        aliases: ['nc'],\n        // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n        // However, most prefer all uppercase and uppercase is customary.\n        case_insensitive: true,\n        lexemes: GCODE_IDENT_RE,\n        keywords: GCODE_KEYWORDS,\n        contains: [\n            {\n                className: 'meta',\n                begin: GCODE_CLOSE_RE\n            },\n            GCODE_START\n        ].concat(GCODE_CODE)\n    };\n};"]},"metadata":{},"sourceType":"script"}