{"ast":null,"code":"module.exports = function (hljs) {\n  // Regular expression for VHDL numeric literals.\n  // Decimal literal:\n  var INTEGER_RE = '\\\\d(_|\\\\d)*';\n  var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?'; // Based literal:\n\n  var BASED_INTEGER_RE = '\\\\w+';\n  var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n  var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword: 'abs access after alias all and architecture array assert assume assume_guarantee attribute ' + 'begin block body buffer bus case component configuration constant context cover disconnect ' + 'downto default else elsif end entity exit fairness file for force function generate ' + 'generic group guarded if impure in inertial inout is label library linkage literal ' + 'loop map mod nand new next nor not null of on open or others out package parameter port ' + 'postponed procedure process property protected pure range record register reject ' + 'release rem report restrict restrict_guarantee return rol ror select sequence ' + 'severity shared signal sla sll sra srl strong subtype then to transport type ' + 'unaffected units until use variable view vmode vprop vunit wait when while with xnor xor',\n      built_in: 'boolean bit character ' + 'integer time delay_length natural positive ' + 'string bit_vector file_open_kind file_open_status ' + 'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' + 'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed ' + 'real_vector time_vector',\n      literal: 'false true note warning error failure ' + // severity_level\n      'line text side width' // textio\n\n    },\n    illegal: '{',\n    contains: [hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.\n    hljs.COMMENT('--', '$'), hljs.QUOTE_STRING_MODE, {\n      className: 'number',\n      begin: NUMBER_RE,\n      relevance: 0\n    }, {\n      className: 'string',\n      begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      className: 'symbol',\n      begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/vhdl.js"],"names":["module","exports","hljs","INTEGER_RE","EXPONENT_RE","DECIMAL_LITERAL_RE","BASED_INTEGER_RE","BASED_LITERAL_RE","NUMBER_RE","case_insensitive","keywords","keyword","built_in","literal","illegal","contains","C_BLOCK_COMMENT_MODE","COMMENT","QUOTE_STRING_MODE","className","begin","relevance","BACKSLASH_ESCAPE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B;AAEA;AACA,MAAIC,UAAU,GAAG,aAAjB;AACA,MAAIC,WAAW,GAAG,cAAcD,UAAhC;AACA,MAAIE,kBAAkB,GAAGF,UAAU,GAAG,MAAb,GAAsBA,UAAtB,GAAmC,IAAnC,GAA0C,GAA1C,GAAgDC,WAAhD,GAA8D,IAAvF,CAN8B,CAO9B;;AACA,MAAIE,gBAAgB,GAAG,MAAvB;AACA,MAAIC,gBAAgB,GAAGJ,UAAU,GAAG,GAAb,GAAmBG,gBAAnB,GAAsC,MAAtC,GAA+CA,gBAA/C,GAAkE,IAAlE,GAAyE,GAAzE,GAA+E,GAA/E,GAAqFF,WAArF,GAAmG,IAA1H;AAEA,MAAII,SAAS,GAAG,SAASD,gBAAT,GAA4B,GAA5B,GAAkCF,kBAAlC,GAAuD,GAAvE;AAEA,SAAO;AACLI,IAAAA,gBAAgB,EAAE,IADb;AAELC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EACL,gGACA,6FADA,GAEA,sFAFA,GAGA,qFAHA,GAIA,0FAJA,GAKA,mFALA,GAMA,gFANA,GAOA,+EAPA,GAQA,0FAVM;AAWRC,MAAAA,QAAQ,EACN,2BACA,6CADA,GAEA,oDAFA,GAGA,2EAHA,GAIA,yFAJA,GAKA,yBAjBM;AAkBRC,MAAAA,OAAO,EACL,2CAA4C;AAC5C,4BApBM,CAoBsC;;AApBtC,KAFL;AAwBLC,IAAAA,OAAO,EAAE,GAxBJ;AAyBLC,IAAAA,QAAQ,EAAE,CACRb,IAAI,CAACc,oBADG,EACwB;AAChCd,IAAAA,IAAI,CAACe,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAFQ,EAGRf,IAAI,CAACgB,iBAHG,EAIR;AACEC,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAEZ,SAFT;AAGEa,MAAAA,SAAS,EAAE;AAHb,KAJQ,EASR;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,yBAFT;AAGEL,MAAAA,QAAQ,EAAE,CAACb,IAAI,CAACoB,gBAAN;AAHZ,KATQ,EAcR;AACEH,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,4BAFT;AAGEL,MAAAA,QAAQ,EAAE,CAACb,IAAI,CAACoB,gBAAN;AAHZ,KAdQ;AAzBL,GAAP;AA8CD,CA3DD","sourcesContent":["module.exports = function(hljs) {\n  // Regular expression for VHDL numeric literals.\n\n  // Decimal literal:\n  var INTEGER_RE = '\\\\d(_|\\\\d)*';\n  var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n  // Based literal:\n  var BASED_INTEGER_RE = '\\\\w+';\n  var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n  var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'abs access after alias all and architecture array assert assume assume_guarantee attribute ' +\n        'begin block body buffer bus case component configuration constant context cover disconnect ' +\n        'downto default else elsif end entity exit fairness file for force function generate ' +\n        'generic group guarded if impure in inertial inout is label library linkage literal ' +\n        'loop map mod nand new next nor not null of on open or others out package parameter port ' +\n        'postponed procedure process property protected pure range record register reject ' +\n        'release rem report restrict restrict_guarantee return rol ror select sequence ' +\n        'severity shared signal sla sll sra srl strong subtype then to transport type ' +\n        'unaffected units until use variable view vmode vprop vunit wait when while with xnor xor',\n      built_in:\n        'boolean bit character ' +\n        'integer time delay_length natural positive ' +\n        'string bit_vector file_open_kind file_open_status ' +\n        'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +\n        'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed ' +\n        'real_vector time_vector',\n      literal:\n        'false true note warning error failure ' +  // severity_level\n        'line text side width'                      // textio\n    },\n    illegal: '{',\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,      // VHDL-2008 block commenting.\n      hljs.COMMENT('--', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        className: 'symbol',\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}