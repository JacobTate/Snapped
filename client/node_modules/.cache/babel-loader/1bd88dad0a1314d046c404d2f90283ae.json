{"ast":null,"code":"module.exports = function (hljs) {\n  var TYPEPARAM = {\n    begin: '<',\n    end: '>',\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: /'[a-zA-Z0-9_]+/\n    })]\n  };\n  return {\n    aliases: ['fs'],\n    keywords: 'abstract and as assert base begin class default delegate do done ' + 'downcast downto elif else end exception extern false finally for ' + 'fun function global if in inherit inline interface internal lazy let ' + 'match member module mutable namespace new null of open or ' + 'override private public rec return sig static struct then to ' + 'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [{\n      // monad builder keywords (matches before non-bang kws)\n      className: 'keyword',\n      begin: /\\b(yield|return|let|do)!/\n    }, {\n      className: 'string',\n      begin: '@\"',\n      end: '\"',\n      contains: [{\n        begin: '\"\"'\n      }]\n    }, {\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"'\n    }, hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'), {\n      className: 'class',\n      beginKeywords: 'type',\n      end: '\\\\(|=|$',\n      excludeEnd: true,\n      contains: [hljs.UNDERSCORE_TITLE_MODE, TYPEPARAM]\n    }, {\n      className: 'meta',\n      begin: '\\\\[<',\n      end: '>\\\\]',\n      relevance: 10\n    }, {\n      className: 'symbol',\n      begin: '\\\\B(\\'[A-Za-z])\\\\b',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, hljs.C_LINE_COMMENT_MODE, hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), hljs.C_NUMBER_MODE]\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/coding/Projects/Snapped/client/node_modules/highlight.js/lib/languages/fsharp.js"],"names":["module","exports","hljs","TYPEPARAM","begin","end","contains","inherit","TITLE_MODE","aliases","keywords","illegal","className","COMMENT","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","relevance","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE,GADO;AACFC,IAAAA,GAAG,EAAE,GADH;AAEdC,IAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACK,OAAL,CAAaL,IAAI,CAACM,UAAlB,EAA8B;AAACJ,MAAAA,KAAK,EAAE;AAAR,KAA9B,CADQ;AAFI,GAAhB;AAOA,SAAO;AACLK,IAAAA,OAAO,EAAE,CAAC,IAAD,CADJ;AAELC,IAAAA,QAAQ,EACN,sEACA,mEADA,GAEA,uEAFA,GAGA,4DAHA,GAIA,+DAJA,GAKA,yDARG;AASLC,IAAAA,OAAO,EAAE,MATJ;AAULL,IAAAA,QAAQ,EAAE,CACR;AACE;AACAM,MAAAA,SAAS,EAAE,SAFb;AAGER,MAAAA,KAAK,EAAE;AAHT,KADQ,EAMR;AACEQ,MAAAA,SAAS,EAAE,QADb;AAEER,MAAAA,KAAK,EAAE,IAFT;AAEeC,MAAAA,GAAG,EAAE,GAFpB;AAGEC,MAAAA,QAAQ,EAAE,CAAC;AAACF,QAAAA,KAAK,EAAE;AAAR,OAAD;AAHZ,KANQ,EAWR;AACEQ,MAAAA,SAAS,EAAE,QADb;AAEER,MAAAA,KAAK,EAAE,KAFT;AAEgBC,MAAAA,GAAG,EAAE;AAFrB,KAXQ,EAeRH,IAAI,CAACW,OAAL,CAAa,QAAb,EAAuB,QAAvB,CAfQ,EAgBR;AACED,MAAAA,SAAS,EAAE,OADb;AAEEE,MAAAA,aAAa,EAAE,MAFjB;AAEyBT,MAAAA,GAAG,EAAE,SAF9B;AAEyCU,MAAAA,UAAU,EAAE,IAFrD;AAGET,MAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACc,qBADG,EAERb,SAFQ;AAHZ,KAhBQ,EAwBR;AACES,MAAAA,SAAS,EAAE,MADb;AAEER,MAAAA,KAAK,EAAE,MAFT;AAEiBC,MAAAA,GAAG,EAAE,MAFtB;AAGEY,MAAAA,SAAS,EAAE;AAHb,KAxBQ,EA6BR;AACEL,MAAAA,SAAS,EAAE,QADb;AAEER,MAAAA,KAAK,EAAE,oBAFT;AAGEE,MAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACgB,gBAAN;AAHZ,KA7BQ,EAkCRhB,IAAI,CAACiB,mBAlCG,EAmCRjB,IAAI,CAACK,OAAL,CAAaL,IAAI,CAACkB,iBAAlB,EAAqC;AAACT,MAAAA,OAAO,EAAE;AAAV,KAArC,CAnCQ,EAoCRT,IAAI,CAACmB,aApCG;AAVL,GAAP;AAiDD,CAzDD","sourcesContent":["module.exports = function(hljs) {\n  var TYPEPARAM = {\n    begin: '<', end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n    ]\n  };\n\n  return {\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      {\n        className: 'class',\n        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<', end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}